@using System.Globalization

@code {
    [Parameter]
    public EventCallback<DateTime> OnDateSelected { get; set; }

    private DateTime selectedDate;


    // Functie om toekomstige datums op te halen
    private IEnumerable<DateTime> GetFutureDates()
    {
        var today = DateTime.Now;
        var futureDates = new List<DateTime>();

        for (int i = 1; i < 7; i++)
        {
            futureDates.Add(today.AddDays(i));
        }

        return futureDates;
    }

    private async Task SelectDate(DateTime selectedDate)
    {
        await OnDateSelected.InvokeAsync(selectedDate);
        this.selectedDate = selectedDate; 
        StateHasChanged(); 
    }

 
    protected override async Task OnInitializedAsync()
    {
        await SelectDate(DateTime.Now);



        if (selectedDate == DateTime.Now)
        {
            StateHasChanged(); 
        }

    }


}



<div class="date-selector-container">
    <button class="date-container @(selectedDate == DateTime.Now ? "selected" : "")" @onclick="() => SelectDate(DateTime.Now)">
        VANDAAG
    </button>
    @foreach (var date in GetFutureDates())
    {
        <button class="date-container" @onclick="() => SelectDate(date)">
            @date.ToString("ddd dd MMM", CultureInfo.CreateSpecificCulture("nl-NL"))
        </button>
    }
</div>