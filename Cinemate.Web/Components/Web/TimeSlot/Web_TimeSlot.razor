@using Cinemate.Models.Dto
@using Cinemate.Web.Services.Contracts
@inject ISelectedMovieService SelectedMovieService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@code {
    [Parameter] public ScreeningWithInfoDto ScreeningInfo { get; set; }
}

<div @onclick="HandleTimeslotClick" class="time-slot-container">
    <div>
        <p class="time">@ScreeningInfo.MovieStart.ToString("HH:mm")</p>
        <p class="location">Zaal @ScreeningInfo.TheaterRoomId</p>
    </div>
    <i class="fa-solid fa-arrow-right"></i>
</div>
@code {
    [Inject] public IMovieService? MovieService { get; set; }
    private MovieWithCategoryDto? Movie { get; set; }
    private MovieDtoImage? MovieWithImage { get; set; }
    
}
@code {

    private async Task HandleTimeslotClick()

    {
        Movie = await MovieService?.GetMovie(ScreeningInfo.MovieId);

        var MovieWithImage = new MovieDtoImage
            {
                Id = Movie.Id,
                Title = Movie.Title,
                Description = Movie.Description,
                Duration = Movie.Duration,
                ReleaseYear = Movie.ReleaseYear,
                MovieCategoryId = Movie.MovieCategoryId,
                MovieCategoryDescription = Movie.MovieCategoryDescription,
                Director = Movie.Director,
                Cast = Movie.Cast,
                Review = Movie.Review,
                Kijkwijzers = Movie.Kijkwijzers,
                MoviePosterUrl = $"https://localhost:7201/images/posters/movie_{Movie.Id}_image.jpg",
                MovieScreenshotUrl = $"https://localhost:7201/images/screenshots/movie-screenshot_{Movie.Id}_image.jpg"
            };
        // opslaan van movie gegevens
        var selectedMovieService = new SelectedMovieService(JSRuntime);
        await selectedMovieService.SetSelectedMovieAsync(MovieWithImage);

        // Navigeren naar /kiosk/seat-reservation met de screening als parameters
        var uri = $"/kiosk/seat-reservation/{ScreeningInfo.Id}";
        NavigationManager.NavigateTo(uri);
    }
}