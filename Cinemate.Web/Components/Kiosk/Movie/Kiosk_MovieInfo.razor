@using Cinemate.Models.Dto
@using Cinemate.Models.Enum

@inject ISelectedMovieService SelectedMovieService


<img class="movie-img-container" src="@(selectedMovie?.MovieScreenshotUrl)" alt="Movie screenshot" />

<h1>@(selectedMovie?.Title)</h1>

<div class="movie-details-primary">
    <div class="mpa-rating">
        @if (selectedMovie?.Kijkwijzers != null)
        {
            foreach (var kijkwijzer in Enum.GetValues(typeof(Kijkwijzer)))
            {
                if (selectedMovie.Kijkwijzers.Contains(kijkwijzer.ToString()))
                {
                    var safeFileName = GetSafeFileName(kijkwijzer.ToString());
                    var imagePath = $"/images/kijkwijzer-{safeFileName}.svg";

                    // Gebruik relatief pad naar de afbeelding
                    <img class="mpa-icon" src="@imagePath" alt="Kijkwijzer - @kijkwijzer" />
                }
            }
        }
    </div>
    <p class="movie-duration">@selectedMovie?.Duration Minuten</p>
</div>



<p>@(selectedMovie?.Description)</p>

<table class="movie-details-secondary">
    <tbody>
    <tr>
        <td>
            <p>Bij Cinemate vanaf</p>
        </td>
        <td>
            <p>Woensdag 22 november 2023</p>
        </td>
    </tr>
    <tr>
        <td>
            <p>Genre</p>
        </td>
        <td>
              <p>@(selectedMovie?.MovieCategoryDescription)</p>
        </td>
    </tr>
    <tr>
        <td>
            <p>Gesproken taal</p>
        </td>
        <td>
            <p>Nederlands</p>
        </td>
    </tr>
    <tr>
        <td>
            <p>Jaar van uitgave</p>
        </td>
        <td>
                <p>@(selectedMovie?.ReleaseYear)</p>
        </td>
    </tr>
    <tr>
        <td>
            <p>Regisseur</p>
        </td>
        <td>
                <p>@(selectedMovie?.Director)</p>
        </td>
    </tr>
    <tr>
        <td>
            <p>Acteurs</p>
        </td>
        <td>
                <p>@(selectedMovie?.Cast)</p>
        </td>
    </tr>
    </tbody>
</table>

@code {

    private MovieDtoImage selectedMovie;

    protected override async Task OnInitializedAsync()
    {
        selectedMovie = await SelectedMovieService.GetSelectedMovieAsync();
    }





}
 @functions {
    public string GetSafeFileName(string input)
    {
        return input.ToLower()
                    .Replace(" ", "-")
                    .Replace("/", "-")
                    .Replace("&", "")
                    .Replace("é", "e")
                    .Replace("ë", "e")
                    .Replace("(", "")
                    .Replace(")", "")
                    .Replace("ó", "o")
                    .Replace("ö", "o")
                    .Replace("ü", "u")
                    .Replace(" ", "")
                    .Replace("geweldseks", "geweld-seks")
                    .Replace("grofgeweld", "grof-geweld")
                    .Replace("zelfdoding", "zelf-doding")
                    .Replace("drugsenalcoholgebruik", "drugs-en-alcoholgebruik")
                    .Replace("groftaalgebruik", "grof-taalgebruik")
                    .Replace(" ", "-")
                    .Replace("en/of", "en-of");
    }
}
